# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Upfile < Formula
  desc "A CLI tool to manage and sync shared configuration files across projects."
  homepage "github.com/skewb1k/upfile"
  version "1.1.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/skewb1k/upfile/releases/download/v1.1.0/upfile_Darwin_x86_64.tar.gz"
      sha256 "457ddf5856564f75f8c81c8777ae3b69834e267ef619ea446edef0154de940d9"

      def install
        bin.install "upfile"
        bash_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "bash")
        (bash_completion/"upfile").write bash_output
        zsh_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "zsh")
        (zsh_completion/"_upfile").write zsh_output
        fish_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "fish")
        (fish_completion/"upfile.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/skewb1k/upfile/releases/download/v1.1.0/upfile_Darwin_arm64.tar.gz"
      sha256 "9407b44230c5109d649b4faf400229a80f7b009fe848151cf43cc1ff994697e3"

      def install
        bin.install "upfile"
        bash_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "bash")
        (bash_completion/"upfile").write bash_output
        zsh_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "zsh")
        (zsh_completion/"_upfile").write zsh_output
        fish_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "fish")
        (fish_completion/"upfile.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/skewb1k/upfile/releases/download/v1.1.0/upfile_Linux_x86_64.tar.gz"
      sha256 "0566b74d96cae777dd4b1594abf4aca61a55558ecfd34a4472fb5646fab66db3"
      def install
        bin.install "upfile"
        bash_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "bash")
        (bash_completion/"upfile").write bash_output
        zsh_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "zsh")
        (zsh_completion/"_upfile").write zsh_output
        fish_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "fish")
        (fish_completion/"upfile.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/skewb1k/upfile/releases/download/v1.1.0/upfile_Linux_arm64.tar.gz"
      sha256 "ecbeaddef07b1098cef291429b03971818a6306f82b72e2e1b28e4c1e05185ec"
      def install
        bin.install "upfile"
        bash_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "bash")
        (bash_completion/"upfile").write bash_output
        zsh_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "zsh")
        (zsh_completion/"_upfile").write zsh_output
        fish_output = Utils.safe_popen_read("#{bin}/upfile", "completion", "fish")
        (fish_completion/"upfile.fish").write fish_output
      end
    end
  end
end
